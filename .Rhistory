all_cabin_spl %>%
mutate(Num = as.numeric(Num)) %>%
select_if(function(col) is.numeric(col) | str_detect(col, 'Transported'))
all_cabin_spl %>%
mutate(Num = as.numeric(Num)) %>%
select_if(is.numeric(.) | str_detect(., 'Transported'))
all_cabin_spl %>%
mutate(Num = as.numeric(Num)) %>%
select_if(function(col) is.numeric(col) | str_detect(names(col), 'Transported'))
all_cabin_spl %>%
mutate(Num = as.numeric(Num)) %>%
select_if(is.numeric(.) | str_detect(names(.), 'Transported'))
# View histograms to see if distribution changes by transportation status, indicating possibly useful features
all_cabin_spl %>%
mutate(Num = as.numeric(Num)) %>%
select_if(str_detect(names(.), 'Transported') | is.numeric(.))
all_cabin_spl %>%
mutate(Num = as.numeric(Num)) %>%
select_if(is.numeric(.) || str_detect(names(.), 'Transported'))
all_cabin_spl %>%
mutate(Num = as.numeric(Num)) %>%
select_if(str_detect(names(.), "Transported") | sapply(., is.numeric))
# View histograms to see if distribution changes by transportation status, indicating possibly useful features
all_cabin_spl %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported")) %>%
gather(variable, value)
all_cabin_spl %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported"))
# View histograms to see if distribution changes by transportation status, indicating possibly useful features
all_cabin_spl %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported")) %>%
gather(variable, value, -Transported)
# View histograms to see if distribution changes by transportation status, indicating possibly useful features
all_cabin_spl %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported")) %>%
gather(variable, value, -Transported) %>%
ggplot(aes(x = value)) +
geom_histogram() +
facet_grid(cols = vars(Transported), rows = vars(variable), .scales = 'free')
# View histograms to see if distribution changes by transportation status, indicating possibly useful features
all_cabin_spl %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported")) %>%
gather(variable, value, -Transported) %>%
ggplot(aes(x = value)) +
geom_histogram() +
facet_grid(cols = vars(Transported), rows = vars(variable), scales = 'free')
# View histograms to see if distribution changes by transportation status, indicating possibly useful features
all_cabin_spl %>%
filter(dataset == 'train') %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported")) %>%
gather(variable, value, -Transported) %>%
ggplot(aes(x = value)) +
geom_histogram() +
facet_grid(cols = vars(Transported), rows = vars(variable), scales = 'free')
# View histograms to see if distribution changes by transportation status, indicating possibly useful features
all_cabin_spl %>%
filter(dataset == 'train') %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported")) %>%
gather(variable, value, -Transported) %>%
ggplot(aes(x = value, fill = 'Transported')) +
geom_histogram()
# View histograms to see if distribution changes by transportation status, indicating possibly useful features
all_cabin_spl %>%
filter(dataset == 'train') %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported")) %>%
gather(variable, value, -Transported) %>%
ggplot(aes(x = value, fill = 'Transported')) +
geom_histogram() +
facet_wrap(vars(variable), scales = 'free') +
## 2. Feature Importance ----
# While we've developed hypotheses regarding which features may have value in predicting whether an individual has been transported
#  or not, let's back these with some formal analysis.
# Mutual information and Weight of Evidence
## 3. Missings/NAs ----
#  Noting some missing values hidden as empty strings, convert to NAs and count number of missings
#   We'll worry about imputing missing values later
#   About the same percentage of each column is missing values, will need to see if these vary with each other
all %>%
select(-dataset) %>%
select_if(is.character) %>%
mutate_all(.funs = ~ na_if(., "")) %>%
sapply(function(x) sum(is.na(x))) / nrow(all)
# View histograms to see if distribution changes by transportation status, indicating possibly useful features
all_cabin_spl %>%
filter(dataset == 'train') %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported")) %>%
gather(variable, value, -Transported) %>%
ggplot(aes(x = value, fill = 'Transported')) +
geom_histogram() +
facet_wrap(vars(variable), scales = 'free')
all_cabin_spl %>%
filter(dataset == 'train') %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported")) %>%
gather(variable, value, -Transported)
# View histograms to see if distribution changes by transportation status, indicating possibly useful features
all_cabin_spl %>%
filter(dataset == 'train') %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported")) %>%
gather(variable, value, -Transported) %>%
ggplot(aes(x = value, fill = Transported)) +
geom_histogram() +
facet_wrap(vars(variable), scales = 'free')
# View histograms to see if distribution changes by transportation status, indicating possibly useful features
all_cabin_spl %>%
filter(dataset == 'train') %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported")) %>%
gather(variable, value, -Transported) %>%
ggplot(aes(x = value, fill = Transported)) +
geom_histogram(position = 'dodge') +
facet_wrap(vars(variable), scales = 'free')
# View histograms to see if distribution changes by transportation status, indicating possibly useful features
#  Nothing seems to jump out as particularly illuminating, although it seems like younger children are more likely to be transported
all_cabin_spl %>%
filter(dataset == 'train') %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported")) %>%
gather(variable, value, -Transported) %>%
ggplot(aes(x = value, fill = Transported)) +
geom_histogram(position = 'dodge') +
facet_wrap(vars(variable), scales = 'free') +
theme(legend.position = "bottom")
# View histograms to see if distribution changes by transportation status, indicating possibly useful features
#  Nothing seems to jump out as particularly illuminating, although it seems like younger children are more likely to be transported
all_cabin_spl %>%
filter(dataset == 'train') %>%
mutate(Num = as.numeric(Num)) %>%
select_if(sapply(., is.numeric) | str_detect(names(.), "Transported")) %>%
gather(variable, value, -Transported) %>%
ggplot(aes(x = value, fill = Transported)) +
geom_histogram(position = 'dodge') +
facet_wrap(vars(variable), scales = 'free') +
scale_y_continuous(labels = comma) +
theme(legend.position = "bottom") +
labs(x = 'Value', y = 'Count')
?ggplot
## Load packages ----
invisible({
# Packages to load are found in the character vector below
packages <- c("tidyverse", "data.table", "ggplot2", "scales", "tictoc", "infotheo")
if(!all(packages %in% rownames(installed.packages()))) {
to_install <- packages[!(packages %in% rownames(installed.packages()))]
lapply(to_install, install.packages, character.only = TRUE)
rm(to_install)
}
lapply(packages, library, character.only = TRUE)
rm(packages)
})
all_full <- all_cabin_spl %>%
left_join(all_grps, by = 'GroupId')
all_full
all_full <- all_cabin_spl %>%
separate(PassengerId, c('GroupId', 'PassengerId'), "_") %>%
left_join(all_grps, by = 'GroupId')
all_full
all_wrk <- all_cabin_spl %>%
separate(PassengerId, c('GroupId', 'PassengerId'), "_") %>%
left_join(all_grps, by = 'GroupId')
train_wrk <- all_wrk %>% filter(dataset == 'train') %>% select(-dataset)
all_wrk <- all_cabin_spl %>%
separate(PassengerId, c('GroupId', 'PassengerId'), "_") %>%
left_join(all_grps, by = 'GroupId') %>%
mutate_all(.funs = ~ na_if(., ""))
train_wrk <- all_wrk %>% filter(dataset == 'train') %>% select(-dataset)
# First we'll use mutual information to rank the variables in terms of information level
mutinformation(train_wrk$HomePlanet, train_wrk$Transported)
train_wrk
train_wrk %>%
select(-Transported) %>%
sapply(function(x) mutinformation(., train_wrk$Transported))
# First we'll use mutual information to rank the variables in terms of information level
train_wrk %>%
select(-Transported) %>%
lapply(function(x) mutinformation(., train_wrk$Transported))
train_wrk$Transported
mutinformation(train_wrk$HomePlanet, train_wrk$Transported)
train_wrk %>%
select(-Transported)
mutinformation(train_wrk$HomePlanet, train_wrk$Transported) %>% str()
# First we'll use mutual information to rank the variables in terms of information level
train_wrk %>%
select(-Transported) %>%
lapply(function(x) mutinformation(., train_wrk$Transported))
# First we'll use mutual information to rank the variables in terms of information level
train_wrk %>%
select(-Transported) %>%
sapply(function(x) mutinformation(., train_wrk$Transported))
# First we'll use mutual information to rank the variables in terms of information level
train_wrk %>%
select(-Transported) %>%
apply(function(x) mutinformation(., train_wrk$Transported))
# First we'll use mutual information to rank the variables in terms of information level
train_wrk %>%
select(-Transported) %>%
lapply(mutinformation(train_wrk$Transported))
mutinformation(train_wrk %>%
select(-Transported), train_wrk$Transported)
mutinformation(train_wrk %>% select(-Transported), train_wrk$Transported)
mutinformation(train_wrk %>% select(-Transported) %>% as.matrix(), train_wrk$Transported)
train_wrk %>% select(-Transported) %>% as.matrix()
tibble(
variable = train_wrk %>% select(-Transported) %>% colnames()
)
mutual_info <- tibble(
variable = train_wrk %>% select(-Transported) %>% colnames(),
mututal_info = NA_real_
)
print(col)
for (col in mutual_info$variable) {
print(col)
}
mutual_info['RoomService']
mutual_info['RoomService',]
mutual_info[1]
mutual_info[1, 1]
for (i in 1:nrow(mutual_info)) {
print(mutual_info[[i, 1]])
# mut_inf <- mutinformation(, train_wrk['Transported'])
}
mutual_info[i, 2] <- mutinformation(train_wrk[mutual_info[[i, 1]]], train_wrk['Transported'])
for (i in 1:nrow(mutual_info)) {
mutual_info[i, 2] <- mutinformation(train_wrk[mutual_info[[i, 1]]], train_wrk['Transported'])
}
for (i in 1:nrow(mutual_info)) {
mutual_info[[i, 2]] <- mutinformation(train_wrk[mutual_info[[i, 1]]], train_wrk['Transported'])
}
for (i in 1:nrow(mutual_info)) {
mutual_info[[i, 2]] <- mutinformation(train_wrk['HomePlanet'], train_wrk['Transported'])
}
for (i in 1:nrow(mutual_info)) {
print(mutinformation(train_wrk[mutual_info[[i, 1]]], train_wrk['Transported']))
}
train_wrk['Transported']
mutual_info[[i, 2]] <- mutinformation(train_wrk[mutual_info[[i, 1]]], train_wrk[['Transported']])
for (i in 1:nrow(mutual_info)) {
mutual_info[[i, 2]] <- mutinformation(train_wrk[mutual_info[[i, 1]]], train_wrk[['Transported']])
}
mutual_info[[i, 2]] <- mutinformation(train_wrk[mutual_info[[i, 1]]], train_wrk$Transported)
for (i in 1:nrow(mutual_info)) {
mutual_info[[i, 2]] <- mutinformation(train_wrk[mutual_info[[i, 1]]], train_wrk$Transported)
}
train_wrk[mutual_info[[1, 1]]]
## Load data & manipulate ----
train <- fread('raw-data/train.csv') %>% as_tibble()
test  <- fread('raw-data/test.csv') %>% as_tibble()
all   <- bind_rows(
train %>% mutate(dataset = 'train'),
test %>% mutate(dataset = 'test')
)
# Deeper dive into Cabins
#  Split into Deck/Num/Side - we'll discuss Num in the numeric variables section
all_cabin_spl <- all %>%
mutate(Cabin = na_if(Cabin, "")) %>%
separate(Cabin, c("Deck", "Num", "Side"), "/")
# Deeper dive into passenger ID and travel groups
#  Let's create a variable to see the size of an individual's travelling group
all_grp_sep <- all %>%
separate(PassengerId, c('GroupId', 'PassengerId'), "_")
all_grps <- all_grp_sep %>%
distinct(GroupId, PassengerId) %>%
group_by(GroupId) %>%
summarise(
group_size = n(),
.groups = 'drop'
)
all_wrk <- all_cabin_spl %>%
separate(PassengerId, c('GroupId', 'PassengerId'), "_") %>%
left_join(all_grps, by = 'GroupId') %>%
mutate_all(.funs = ~ na_if(., ""))
train_wrk <- all_wrk %>% filter(dataset == 'train') %>% select(-dataset)
mutual_info <- tibble(
variable = train_wrk %>% select(-Transported) %>% colnames(),
mutual_info = NA_real_
)
for (i in 1:nrow(mutual_info)) {
mutual_info[[i, 2]] <- mutinformation(train_wrk[mutual_info[[i, 1]]], train_wrk$Transported)
}
mutual_info
mutual_info <- tibble(
variable = train_wrk %>% select(-Transported, -GroupId, -Name) %>% colnames(),
mutual_info = NA_real_
)
for (i in 1:nrow(mutual_info)) {
mutual_info[[i, 2]] <- mutinformation(train_wrk[mutual_info[[i, 1]]], train_wrk$Transported)
}
mutual_info
mutual_info <- mutual_info %>% arrange(desc(mutual_info))
mutual_info %>%
ggplot(aes(x = mutual_info, y = variable)) +
geom_col()
mutual_info <- mutual_info %>% arrange(desc(mutual_info))
mutual_info %>%
ggplot(aes(x = mutual_info, y = variable)) +
geom_col()
mutual_info
mutual_info %>% arrange(desc(mutual_info)) %>% pull(variable)
mutual_info <- mutual_info %>%
mutate(variable = factor(variable, levels = mutual_info %>% arrange(desc(mutual_info)) %>% pull(variable)))
mutual_info %>% arrange(desc(mutual_info))
mutual_info <- mutual_info %>%
mutate(variable = factor(variable, levels = (mutual_info %>% arrange(desc(mutual_info)) %>% pull(variable))))
mutual_info_fct_order
mutual_info_fct_order <- mutual_info %>% arrange(desc(mutual_info)) %>% pull(variable)
mutual_info <- mutual_info %>%
mutual_info <- mutual_info %>%
mutate(variable = factor(variable, levels = mutual_info_fct_order))
mutual_info
mutual_info %>%
ggplot(aes(x = mutual_info, y = variable)) +
geom_col()
mutual_info_fct_order <- mutual_info %>% arrange(mutual_info) %>% pull(variable)
mutual_info <- mutual_info %>%
mutate(variable = factor(variable, levels = mutual_info_fct_order))
mutual_info %>%
ggplot(aes(x = mutual_info, y = variable)) +
geom_col()
mutual_info <- tibble(
variable = train_wrk %>% select(-Transported, -GroupId, -Name, -PassengerId) %>% colnames(),
mutual_info = NA_real_
)
for (i in 1:nrow(mutual_info)) {
mutual_info[[i, 2]] <- mutinformation(train_wrk[mutual_info[[i, 1]]], train_wrk$Transported)
}
mutual_info_fct_order <- mutual_info %>% arrange(mutual_info) %>% pull(variable)
mutual_info <- mutual_info %>%
mutate(variable = factor(variable, levels = mutual_info_fct_order))
mutual_info %>%
ggplot(aes(x = mutual_info, y = variable)) +
geom_col()
mutual_info
mutual_info %>%
ggplot(aes(x = mutual_info, y = variable)) +
geom_col() +
labs(x = 'Mutual Information', y = 'Variable')
## Load packages ----
invisible({
# Packages to load are found in the character vector below
packages <- c("tidyverse", "data.table", "ggplot2", "scales", "tictoc", "infotheo", "klaR")
if(!all(packages %in% rownames(installed.packages()))) {
to_install <- packages[!(packages %in% rownames(installed.packages()))]
lapply(to_install, install.packages, character.only = TRUE)
rm(to_install)
}
lapply(packages, library, character.only = TRUE)
rm(packages)
})
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(Transported ~ ., data=train_wrk)
train_wrk
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(Transported ~ ., data = train_wrk)
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(Transported ~ ., data = train_wrk %>% as.data.frame())
as.data.frame
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(Transported ~ HomePlanet, data = train_wrk)
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(formula = Transported ~ HomePlanet, data = train_wrk)
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe.formula(formula = Transported ~ HomePlanet, data = train_wrk)
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(formula = Transported ~ HomePlanet, data = train_wrk)
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(formula = Transported ~ ., data = train_wrk)
train_wrk
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(Transported ~ HomePlannet, data = train_wrk)
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(Transported ~ HomePlanet, data = train_wrk)
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(formula = Transported ~ HomePlanet, data = train_wrk)
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(formula = Transported ~ HomePlanet, data = train_wrk %>% as.data.frame())
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(train_wrk %>% select(-Transported), grouping = train_wrk$Transported)
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(x = train_wrk %>% select(-Transported), grouping = train_wrk$Transported)
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(x = train_wrk, grouping = train_wrk$Transported)
# Next, we'll look at Weight of Evidence which is related but slightly different:
#  https://stats.stackexchange.com/questions/16945/why-do-people-use-the-term-weight-of-evidence-and-how-does-it-differ-from-poi
woe(train_wrk, grouping = train_wrk$Transported)
## Load packages ----
invisible({
# Packages to load are found in the character vector below
packages <- c("tidyverse", "data.table", "ggplot2", "scales", "tictoc", "infotheo", "Information")
if(!all(packages %in% rownames(installed.packages()))) {
to_install <- packages[!(packages %in% rownames(installed.packages()))]
lapply(to_install, install.packages, character.only = TRUE)
rm(to_install)
}
lapply(packages, library, character.only = TRUE)
rm(packages)
})
train_woe <- train_wrk
train_woe <- train_wrk %>%
select(-GroupId, -Name, -PassengerId) %>%
mutate(Transported = as.factor(Transported))
train_wrk %>%
dplyr::select(-GroupId, -Name, -PassengerId) %>%
mutate(Transported = as.factor(Transported))
train_woe <- train_wrk %>%
dplyr::select(-GroupId, -Name, -PassengerId) %>%
mutate(Transported = as.factor(Transported))
train_woe
create_infotables(data=train_woe, y="transported", bins=10, parallel=FALSE)
create_infotables(data=train_woe, y="Transported", bins=10)
train_woe <- train_wrk %>%
dplyr::select(-GroupId, -Name, -PassengerId) %>%
mutate(Transported = as.factor(Transported))
train_woe
train_woe
create_infotables(data = train_woe, y = Transported, bins = 10)
create_infotables(data = train_woe, y = "Transported", bins = 10)
mutate_if
?mutate_if
train_woe <- train_wrk %>%
dplyr::select(-GroupId, -Name, -PassengerId) %>%
mutate_if(
is.character,
factor
)
train_woe
create_infotables(data = train_woe, y = "Transported", bins = 10)
train_woe <- train_wrk %>%
dplyr::select(-GroupId, -Name, -PassengerId) %>%
mutate_if(
is.character,
factor
) %>%
mutate(Transported = as.numeric(Transported))
train_woe
create_infotables(data = train_woe, y = "Transported", bins = 10)
inf_value <- create_infotables(data = train_woe, y = "Transported", bins = 10)$Summary
inf_value
## Load packages ----
invisible({
# Packages to load are found in the character vector below
packages <- c(
"tidyverse", "data.table", "ggplot2",
"scales", "tictoc", "infotheo",
"Information", "gridExtra"
)
if(!all(packages %in% rownames(installed.packages()))) {
to_install <- packages[!(packages %in% rownames(installed.packages()))]
lapply(to_install, install.packages, character.only = TRUE)
rm(to_install)
}
lapply(packages, library, character.only = TRUE)
rm(packages)
})
inf_value
inf_value %>%
ggplot(aes(x = IV, y = Variable)) +
geom_col()
inf_value %>%
mutate(Variable = factor(Variable, levels = inf_value %>% arrange(IV) %>% pull(IV)))
inf_value %>%
mutate(Variable = factor(Variable, levels = inf_value %>% arrange(IV) %>% pull(Variable)))
inf_value %>%
mutate(Variable = factor(Variable, levels = inf_value %>% arrange(IV) %>% pull(Variable))) %>%
ggplot(aes(x = IV, y = Variable)) +
geom_col()
inf_value %>%
mutate(Variable = factor(Variable, levels = inf_value %>% arrange(IV) %>% pull(Variable))) %>%
ggplot(aes(x = IV, y = Variable)) +
geom_col() +
labs(x = 'Information Value')
inf_value %>%
mutate(Variable = factor(Variable, levels = inf_value %>% arrange(IV) %>% pull(Variable))) %>%
ggplot(aes(x = IV, y = Variable)) +
geom_col() +
labs(x = 'Information Value') +
geom_v_line(x = 0.1)
inf_value %>%
mutate(Variable = factor(Variable, levels = inf_value %>% arrange(IV) %>% pull(Variable))) %>%
ggplot(aes(x = IV, y = Variable)) +
geom_col() +
labs(x = 'Information Value') +
geom_vline(x = 0.1)
inf_value %>%
mutate(Variable = factor(Variable, levels = inf_value %>% arrange(IV) %>% pull(Variable))) %>%
ggplot(aes(x = IV, y = Variable)) +
geom_col() +
labs(x = 'Information Value') +
geom_vline(xintercept = 0.1)
